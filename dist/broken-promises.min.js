/*! broken-promises - v0.1.0 - 2014-05-05
* https://github.com/keisans/broken-promises
* Copyright (c) 2014 ; Licensed MIT */
var P=function(){return this instanceof P?(this.currentState="pending",this.value=null,this.queue=[],this):new P};P.prototype=function(a){var b={};return b.state=function(){return this.currentState},b.then=function(b,c,d){if("function"!=typeof b)throw"The method when this promise is fulfilled must be a function";return"object"==typeof c&&(d=c,c=null),this.isResolved()?b.call(d,this.value):this.isRejected()&&c.call(d),this.queue.push({onFulfilled:b,onRejected:c,context:d||a}),this},b.resolve=function(a){this.currentState="resolved",this.value=a;for(var b=0;b<this.queue.length;b+=1)this.queue[b].onFulfilled.call(this.queue[b].context,a);return this},b.reject=function(a){this.state="rejected",this.value=a;for(var b=0;b<this.queue.length;b+=1)this.queue[b].onRejected.call(this.queue[b].context,a);return this},b.isResolved=function(){return"resolved"===this.state()},b.isRejected=function(){return"rejected"===this.state()},b}(this),"function"==typeof define&&define.amd&&define("broken-promise",[],function(){return P});